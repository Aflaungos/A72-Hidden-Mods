name: Build for M23

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out
      uses: actions/checkout@v2

    - name: Create Zip Archive
      run: |
        ZIP_FILE="M23-Hidden_Mods.zip"
        cd $GITHUB_WORKSPACE
        # Archive all files in the repository into a zip file,
        # excluding the .git and .github folders.
        zip -r $ZIP_FILE . -x ".git*" -x ".github*"

    - name: Upload to Release
      id: upload-release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ github.workspace }}/${{ env.ZIP_FILE }}
        name: ${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Mod Version 1.0
          Device: m23xq
        token: ${{ secrets.GH_TOKEN }}  # Use the secret here

    - name: Delete All Other Releases and Runs
      run: |
        # Get the list of all releases
        RELEASES=$(curl -s -X GET \
          -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases" || echo "[]")

        # Loop through all releases and extract their IDs and names
        for row in $(echo "${RELEASES}" | jq -r '.[] | select(.id and .name) | "\(.id) \(.name)"'); do
          RELEASE_ID=$(echo "${row}" | awk '{print $1}')
          RELEASE_NAME=$(echo "${row}" | awk '{print $2}')

          # Get the tag name of the current release
          CURRENT_TAG_NAME="${{ github.run_id }}"

          # Check if the release is not the current one
          if [ "$RELEASE_NAME" != "$CURRENT_TAG_NAME" ]; then
            # Delete the release
            curl -s -X DELETE \
              -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
          fi
        done

        # Get the list of all workflow runs
        RUNS=$(curl -s -X GET \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs" || echo "[]")

        # Loop through all runs and extract their IDs
        for run_id in $(echo "${RUNS}" | jq -r '.workflow_runs[].id' || echo ""); do
          # Check if the run is not the current one
          if [ "$run_id" != "${{ github.run_id }}" ]; then
            # Cancel (delete) the run
            curl -s -X POST \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/cancel"
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
